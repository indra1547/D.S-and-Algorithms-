package binarySearch;

/*
 * {1,1,3,3,5,5,5,5,5,9,9,11}
 * Find how many times 5 exists in this array ?
 * 
 * */

public class CountOccurenceOfElementInSortedList {
	public int count(int[] arr, int target, boolean searchFirst) {
		int result = -1;
		int low = 0;
		int high = arr.length - 1;
		while (low <= high) {
			int mid = low + (high - low) / 2;
			if (target == arr[mid]) {
				result = mid;
				if (searchFirst) {
					high = mid - 1;
				} else {
					low = mid + 1;
				}
			} else if (target < arr[mid]) {
				high = mid - 1;
			} else {
				low = mid + 1;
			}
		}
		return result;
	}

	public static void main(String[] args) {
		CountOccurenceOfElementInSortedList obj = new CountOccurenceOfElementInSortedList();
		int firstIndex = obj.count(new int[] { 1, 1, 3, 3, 5, 5, 5, 5, 5, 9, 9, 11 }, 11, true);
		if (firstIndex == -1) {
			System.out.println("Count of given element is 0");
		} else {
			int lastIndex = obj.count(new int[] { 1, 1, 3, 3, 5, 5, 5, 5, 5, 9, 9, 11 }, 11, false);
			System.out.println("Count of given target element is " + (lastIndex - firstIndex + 1));
		}

	}

}
