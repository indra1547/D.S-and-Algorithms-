package com.indra.interviewProcess.Arrays.InterviewProblems;

import java.util.HashMap;
import java.util.Map;

/*Given an array of size n, find the majority element. The majority element 
is the element that appears more than ⌊ n/2 ⌋ times.You may assume that the 
array is non-empty and the majority element always exist in the array.
 */
public class MajorityElement {
	public int majority(int[] nums) {
		if (nums.length == 1) {
			return nums[0];
		}
		Map<Integer, Integer> map = new HashMap<Integer, Integer>();
		for (int i : nums) {
			if (map.containsKey(i) && map.get(i) + 1 > nums.length / 2) {
				return i;
			} else {
				map.put(i, map.getOrDefault(i, 0) + 1);
			}
		}
		return -1;
	}

	public static void main(String[] args) {
		MajorityElement obj = new MajorityElement();
		System.out.println(obj.majority(new int[] { 3,2,3 }));

	}

}
